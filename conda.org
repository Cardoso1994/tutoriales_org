#+TITLE: Conda

Conda is a package manager initially developed for managing =python= environments

* version
to check what conda version is installed
#+begin_src shell
conda --version
#+end_src
* update
*NOT RECOMMENDEN IN LINUX DISTRIBUTIONS* when installed from the package manager
#+begin_src shell
conda update conda
#+end_src
* Managing environments
Conda creates environments so we can separate files, packages, dependencies
so they do not interact between environments
** Create a new environment and install a package in it
#+begin_src shell
conda create --name environment_name package_to install

# example
conda create --name cip numpy

# env with specific python version
conda create -n myenv python=3.8 numpy

# env with specific package version
conda create -n myenv scipy=0.15.0
#+end_src
** Install packages after environment creation
#+begin_src shell
conda create -n myenv python
conda install -n myenv scipy=0.15.0
#+end_src
** Create environment with specific version and multiple packages (most complete)
#+begin_src shell
conda create -n myenv python=3.6 scipy=0.15.0 astroid babel
#+end_src
** Create environment with yml file
#+begin_src sh
# The first line of the yml file sets the new environment's name. For details see Creating an environment file manually.
conda env create -f environment.yml


# Activate the new environment
conda activate myenv

# Verify that the new environment was installed correctly:
conda env list

# You can also use
conda info --envs.
#+end_src
** Update an environment with yml file *preferred*
When
+ one dependency has a new version, and we want to migrate to it
+ add a new additional package
+ add new dependency and get rid of older package

We need to update the =environment.yml= file accordingly, and the run the
following command:
#+begin_src sh
conda env update --file environment.yml --prune
#+end_src

** Activate an environment
#+begin_src shell
conda activate environment_name

# example
conda activate cip
#+end_src
** Deactivate an environment
#+begin_src shell
conda deactivate
#+end_src
** Remove an environment
#+begin_src shell
conda remove --name myenv --all
#+end_src
** List Conda environments
#+begin_src shell
conda info --envs
#+end_src
** Share an environment
*If you already have an environment.yml file in your current directory, it will
be overwritten during this task.*

#+begin_src sh
# Activate the environment to export:
conda activate myenv

# Export your active environment to a new file:
conda env export > environment.yml
#+end_src
** Update an environment
#+begin_src sh
conda env update --file environment.yml  --prune
#+end_src
* notas
+ moved =/opt/miniconda3/lib/libstdc++.so.6= to =/opt/miniconda3/lib/libstdc++.so.6.bak=
+ copied =/lib/libstdc++.so.6= to =/opt/miniconda3/lib/libstdc++.so.6=
